name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up SSH and Deploy
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        # Save the private key on the GitHub runner
        echo "$SSH_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem

        # SSH into EC2 and deploy the latest code
        ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
          cd ~/trading-system  # Change to your repo directory
          git pull git@github.com:sohammandal/trading-system.git main  # Pull latest changes
          
          # Remove unused Docker images, containers, and build cache
          docker container prune -f
          docker image prune -af
          docker builder prune -af
          docker volume prune -f
          docker system prune -af --volumes

          # Remove old logs and unused dependencies
          journalctl --vacuum-size=100M
          sudo apt autoremove -y && sudo apt clean
          rm -rf ~/.cache/pip  # Remove old pip cache

          # Stop and remove the old running container (if exists)
          docker stop trading-bot || true
          docker rm trading-bot || true

          # Ensure enough space before building
          df -h

          # Rebuild and start the new container
          docker build --no-cache -t trading-bot .   # No-cache to avoid stale layers
          docker run -d --env-file .env --name trading-bot trading-bot
        EOF

        # Cleanup private key
        rm -f private_key.pem
